<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>3D Point Cloud on a Sphere</title>
    <!-- Include Three.js library -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/three.js/r128/three.min.js"></script>
</head>
<body>
    <script>
        // Create a scene
        const scene = new THREE.Scene();

        // Create a camera
        const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);
        camera.position.z = 5;

        // Create a renderer
        const renderer = new THREE.WebGLRenderer();
        renderer.setSize(window.innerWidth, window.innerHeight);
        document.body.appendChild(renderer.domElement);

        // Create a sphere geometry
        const radius = 2;
        const geometry = new THREE.SphereGeometry(radius, 32, 32);

        // Create a material
        const material = new THREE.PointsMaterial({ size: 0.05 });

        // Create a point cloud
        const points = new THREE.Points(geometry, material);
        scene.add(points);

        // Create random points on the surface of the sphere
        const numPoints = 1000;
        const positions = new Float32Array(numPoints * 3);
        for (let i = 0; i < numPoints; i++) {
            const vector = new THREE.Vector3();
            vector.setFromSphericalCoords(radius, Math.acos(2 * Math.random() - 1), Math.random() * Math.PI * 2);
            positions[i * 3] = vector.x;
            positions[i * 3 + 1] = vector.y;
            positions[i * 3 + 2] = vector.z;
        }
        geometry.setAttribute('position', new THREE.BufferAttribute(positions, 3));

        // Function to animate the scene
        function animate() {
            requestAnimationFrame(animate);
            points.rotation.y += 0.005;
            renderer.render(scene, camera);
        }

        // Call animate function
        animate();
    </script>
</body>
</html>
